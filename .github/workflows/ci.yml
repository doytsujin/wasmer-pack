name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - master

env:
  DEFAULT_CRATE_NAME: wit_pack
  RUST_BACKTRACE: 1
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  check:
    name: Compile and Test
    strategy:
      matrix:
        os:
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Rust Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            crates/wit-pack/tests/js/node_modules/
          key: ${{ runner.os }}-cargo-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Give GitHub Actions access to wasmerio/pirita
        uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.PIRITA_REPO_DEPLOY_KEY }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: "1.59.0" # Required by wit-bindgen-gen-rust
          override: true
          target: wasm32-unknown-unknown
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          # cache-dependency-path: |
          #   crates/wit-pack/tests/python/Pipfile.lock

      # We disabled Pipenv because installation on CI was failing when
      # testing multiple Pipenv files
      # - name: Install Pipenv
      #   run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python3

      # We also tried with Poetry, unsuccessfully...
      # - name: Install Poetry
      #   run: curl -sSL https://install.python-poetry.org | python3 -

      - run: yarn --version
      - name: Type Checking
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --verbose --locked
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --verbose --locked
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --verbose --locked

  lints:
    name: Linting and Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Rust Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Give GitHub Actions access to wasmerio/pirita
        uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.PIRITA_REPO_DEPLOY_KEY }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy
      - name: Check Formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --verbose --check
      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace --verbose

  api-docs:
    name: Publish API Docs to GitHub Pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Rust Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Give GitHub Actions access to wasmerio/pirita
        uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.PIRITA_REPO_DEPLOY_KEY }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --workspace --verbose --locked
      - name: Redirect top-level GitHub Pages
        run: 'echo ''<meta http-equiv="refresh" content="0; url=${{ env.DEFAULT_CRATE_NAME }}/index.html" />'' > target/doc/index.html'
        shell: bash
      - name: Upload API Docs
        uses: JamesIves/github-pages-deploy-action@v4.4.0
        if: github.ref == 'refs/heads/master'
        with:
          branch: gh-pages
          folder: target/doc
          single-commit: true
