// @ts-ignore
import { Wasi } from "@wasmer/wasi";

{%- for lib in libraries %}
import { {{lib.class_name}} } from "./{{lib.interface_name}}/{{lib.interface_name}}";
{%- endfor %}

/**
 * Options used when initializing the bindings.
 */
export type LoadOptions = {
    /** Additional imports to be provided to the WebAssembly module */
    imports: WebAssembly.Imports,
    /**
     * A user-specified WebAssembly module to use instead of the one bundled
     * with this package.
     */
    module: WebAssembly.Module,
};

/**
* Extended options used when loading a WASI library.
 */
export type WasiLoadOptions = LoadOptions & {
    /** An initialized `@wasmer/wasi` object. */
    wasi: Wasi,
};

export default class Bindings {
    {%- for lib in libraries %}
    {%- if lib.wasi %}
    {{lib.ident}}(options?: Partial<WasiLoadOptions>): Promise<{{lib.class_name}}>;
    {%- else %}
    {{lib.ident}}(options?: Partial<LoadOptions>): Promise<{{lib.class_name}}>;
    {%- endif %}
    {%- endfor %}
}
